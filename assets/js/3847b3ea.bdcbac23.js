"use strict";(self.webpackChunka_mir_formality=self.webpackChunka_mir_formality||[]).push([[581],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(a),d=r,k=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return a?n.createElement(k,o(o({ref:t},c),{},{components:a})):n.createElement(k,o({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1959:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),o=["components"],l={sidebar_position:2},s="Setup",u={unversionedId:"setup",id:"setup",title:"Setup",description:"How to build, test, and run a-mir-formality:",source:"@site/docs/setup.md",sourceDirName:".",slug:"/setup",permalink:"/a-mir-formality/docs/setup",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/setup.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/a-mir-formality/docs/intro"},next:{title:"How formality works",permalink:"/a-mir-formality/docs/category/how-formality-works"}},c={},p=[{value:"Run racket manually for better stacktraces",id:"run-racket-manually-for-better-stacktraces",level:2},{value:"The <code>traced</code> macro",id:"the-traced-macro",level:2},{value:"My language server keeps crashing! What gives?",id:"my-language-server-keeps-crashing-what-gives",level:2},{value:"Can I use racket without X11 support?",id:"can-i-use-racket-without-x11-support",level:2}],m={toc:p};function d(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"setup"},"Setup"),(0,i.kt)("p",null,"How to build, test, and run a-mir-formality:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://download.racket-lang.org/"},"Download and install racket"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"run ",(0,i.kt)("inlineCode",{parentName:"li"},"nix-shell")," if you have nix available to get everything set up automatically"),(0,i.kt)("li",{parentName:"ul"},"For tips on running without X11 on linux / wsl, see FAQ below."))),(0,i.kt)("li",{parentName:"ul"},"Check out the a-mir-formality repository"),(0,i.kt)("li",{parentName:"ul"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"raco test -t -j 22 src")," to run the tests",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"-t")," option prints a summary table at the end so you can see which modules had failures."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"-j 22")," option uses 22 parallel threads; you may want to tune the number depending on how many cores you have (N.B. ",(0,i.kt)("inlineCode",{parentName:"li"},"-j22")," does not work)."))),(0,i.kt)("li",{parentName:"ul"},"You can use ",(0,i.kt)("a",{parentName:"li",href:"https://docs.racket-lang.org/drracket/"},"DrRacket"),", or you can use VSCode. We recommend the following VSCode extensions:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=evzen-wybitul.magic-racket"},"Magic Racket")," to give a Racket mode that supports most LSP operations decently well",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Note that you have to run ",(0,i.kt)("inlineCode",{parentName:"li"},"raco pkg install racket-langserver"),"!"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=2gua.rainbow-brackets"},"Rainbow brackets")," is highly recommended to help sort out ",(0,i.kt)("inlineCode",{parentName:"li"},"()")),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=studykit.unicode-math"},"Unicode Math")," or ",(0,i.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=oijaz.unicode-latex"},"Unicode Latex")," extensions are useful for inserting characters like ",(0,i.kt)("inlineCode",{parentName:"li"},"\u2200"),".")))),(0,i.kt)("h1",{id:"debugging-tips"},"Debugging tips"),(0,i.kt)("h2",{id:"run-racket-manually-for-better-stacktraces"},"Run racket manually for better stacktraces"),(0,i.kt)("p",null,"When you use ",(0,i.kt)("inlineCode",{parentName:"p"},"raco test"),", you often get stacktraces that are not very helpful. You can do better by running racket manually with the ",(0,i.kt)("inlineCode",{parentName:"p"},"-l errortrace")," flag, which adds some runtime overhead but tracks more information. The easiest way to do this is to use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nikomatsakis/a-mir-formality/blob/main/test"},"the ",(0,i.kt)("inlineCode",{parentName:"a"},"test")," script")," and give it the name of some ",(0,i.kt)("inlineCode",{parentName:"p"},"rkt")," file, e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"src/decl/test/copy.rkt"),". This will run the tests found in the ",(0,i.kt)("inlineCode",{parentName:"p"},"test")," submodule within that file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./test src/decl/test/copy.rkt\n")),(0,i.kt)("p",null,"This will expand to running ",(0,i.kt)("inlineCode",{parentName:"p"},"racket")," with a command like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"racket -l errortrace -l racket/base -e '(require (submod \"src/decl/test/copy.rkt\" test))' \n")),(0,i.kt)("h2",{id:"the-traced-macro"},"The ",(0,i.kt)("inlineCode",{parentName:"h2"},"traced")," macro"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"(traced '() expr)")," macro is used to wrap tests throughout the code. The ",(0,i.kt)("inlineCode",{parentName:"p"},"'()")," is a list of metafunctions and judgments you want to trace. Just add the name of something in there, like ",(0,i.kt)("inlineCode",{parentName:"p"},"lang-item-ok-goals"),", and racket will print out the arguments when it is called, along with its return value:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scheme"},"(traced '(lang-item-ok-goals) expr)\n")),(0,i.kt)("h1",{id:"frequently-asked-questions"},"Frequently asked questions"),(0,i.kt)("h2",{id:"my-language-server-keeps-crashing-what-gives"},"My language server keeps crashing! What gives?"),(0,i.kt)("p",null,"The most common cause of this is that you are on linux/WSL and don't have X11."),(0,i.kt)("p",null,"If you check output and see errors like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Unable to init server: Could not connect: Connection refused\nGtk initialization failed for display ":0"\n')),(0,i.kt)("p",null,"then this is indeed the problem."),(0,i.kt)("p",null,"The problem is that the language server works by running a headless version of racket and GUI functionality is required for some of that, even if it isn't used."),(0,i.kt)("h2",{id:"can-i-use-racket-without-x11-support"},"Can I use racket without X11 support?"),(0,i.kt)("p",null,"Yes, but. One workaround is to install racket into a directory like ",(0,i.kt)("inlineCode",{parentName:"p"},"~/racket")," but not put that on your path. You can then create two binaries in ",(0,i.kt)("inlineCode",{parentName:"p"},"~/bin"),":"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"~/bin/racket"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'#!/bin/bash\nxvfb-run -a $HOME/racket/bin/racket "$@"\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"~/bin/raco"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'#!/bin/bash\nxvfb-run -a $HOME/racket/bin/raco "$@"\n')),(0,i.kt)("p",null,"and then make them executable:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"chmod u+x ~/bin/racket ~/bin/raco\n")),(0,i.kt)("p",null,"That worked for me, anyway."))}d.isMDXComponent=!0}}]);